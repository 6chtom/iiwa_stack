<?xml version="1.0"?>
<launch>

  <!-- Launches the controllers according to the hardware interface selected -->
  <!-- Everythings is spawned under a namespace with the same name as the robot's. -->
  
  <arg name="hardware_interface" default="PositionJointInterface"/>
  <arg name="controllers" default="joint_state_controller 
                                   pos_joint_trajectory_controller"/>
  <arg name="robot_name" default="iiwa" />
  <arg name="model" default="iiwa7" />
  <arg name="flange" default="basic" />
  
  <remap from="robot_description" to="/$(arg robot_name)_description" /> 

  <!-- Loads the URDF with the given hardware interface and robot name into the ROS Parameter Server -->
  <include file="$(find iiwa_description)/launch/$(arg model)_upload.launch">
    <arg name="hardware_interface" value="$(arg hardware_interface)"/>
    <arg name="robot_name" value="$(arg robot_name)" />
    <arg name="flange" value="$(arg flange)" />
  </include>

  <!-- Loads joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find iiwa_control)/config/iiwa_control.yaml" command="load" ns="$(arg robot_name)"/>

  <!-- Loads the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
	output="screen" ns="/$(arg robot_name)" args="$(arg controllers)" />

  <!-- Converts joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
	respawn="false" output="screen">
    <remap from="joint_states" to="/$(arg robot_name)/joint_states" />
    <remap from="robot_description" to="/$(arg robot_name)_description" /> 
  </node>

</launch>
